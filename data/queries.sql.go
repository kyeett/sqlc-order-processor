// Code generated by sqlc. DO NOT EDIT.
// source: queries.sql

package data

import (
	"context"
)

const createOrder = `-- name: CreateOrder :one
INSERT INTO orders (state)
VALUES ($1)
RETURNING id, state
`

func (q *Queries) CreateOrder(ctx context.Context, state string) (Order, error) {
	row := q.db.QueryRowContext(ctx, createOrder, state)
	var i Order
	err := row.Scan(&i.ID, &i.State)
	return i, err
}

const getOrder = `-- name: GetOrder :one
SELECT id, state
FROM orders
WHERE id = ($1)
`

func (q *Queries) GetOrder(ctx context.Context, id int64) (Order, error) {
	row := q.db.QueryRowContext(ctx, getOrder, id)
	var i Order
	err := row.Scan(&i.ID, &i.State)
	return i, err
}

const updateOrderState = `-- name: UpdateOrderState :exec
UPDATE orders
SET state = ($1)
WHERE id = ($2)
`

type UpdateOrderStateParams struct {
	State string
	ID    int64
}

func (q *Queries) UpdateOrderState(ctx context.Context, arg UpdateOrderStateParams) error {
	_, err := q.db.ExecContext(ctx, updateOrderState, arg.State, arg.ID)
	return err
}
